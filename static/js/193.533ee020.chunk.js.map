{"version":3,"file":"static/js/193.533ee020.chunk.js","mappings":"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","sources":["components/Icons/IconEmail.jsx","components/Icons/IconLock.jsx","webpack://Money Guard application/./src/pages/Registration/Registration.module.css?f330","components/Icons/IconUser.jsx","webpack://Money Guard application/./src/components/PasswordStrengthIndicator/PasswordStrengthIndicator.module.css?65a5","components/PasswordStrengthIndicator/PasswordStrengthIndicator.jsx","pages/Registration/Registration.jsx"],"sourcesContent":["import React from 'react';\n\nexport const IconEmail = ({ className }) => {\n  return (\n    <svg id=\"icon_email\" viewBox=\"0 0 32 32\" className={className}>\n      <path\n        fill=\"#fff\"\n        opacity=\"0.4\"\n        d=\"M36 0h-32c-2.2 0-3.98 1.8-3.98 4l-0.020 24c0 2.2 1.8 4 4 4h32c2.2 0 4-1.8 4-4v-24c0-2.2-1.8-4-4-4zM36 8l-16 10-16-10v-4l16 10 16-10v4z\"\n      ></path>\n    </svg>\n  );\n};\n","import React from 'react';\n\nexport const IconLock = ({ className }) => {\n  return (\n    <svg id=\"icon_lock\" viewBox=\"0 0 32 32\" className={className}>\n      <path\n        fill=\"#fff\"\n        opacity=\"0.4\"\n        d=\"M21.333 10.667h-1.524v-3.048c0-4.206-3.413-7.619-7.619-7.619s-7.619 3.413-7.619 7.619v3.048h-1.524c-1.676 0-3.048 1.371-3.048 3.048v15.238c0 1.676 1.371 3.048 3.048 3.048h18.286c1.676 0 3.048-1.371 3.048-3.048v-15.238c0-1.676-1.371-3.048-3.048-3.048zM12.19 24.381c-1.676 0-3.048-1.371-3.048-3.048s1.371-3.048 3.048-3.048c1.676 0 3.048 1.371 3.048 3.048s-1.371 3.048-3.048 3.048zM16.914 10.667h-9.448v-3.048c0-2.606 2.118-4.724 4.724-4.724s4.724 2.118 4.724 4.724v3.048z\"\n      ></path>\n    </svg>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Registration_container__VhNVt\",\"screen\":\"Registration_screen__2QKm3\",\"logo\":\"Registration_logo__VEhwj\",\"title\":\"Registration_title__MJlCo\",\"login__field\":\"Registration_login__field__sJKxS\",\"password_srtength\":\"Registration_password_srtength__TMP1Z\",\"icon_user\":\"Registration_icon_user__oKzzh\",\"icon_lock\":\"Registration_icon_lock__Qo3OP\",\"icon_email\":\"Registration_icon_email__moL3K\",\"login__input\":\"Registration_login__input__e9f3x\",\"login__submit\":\"Registration_login__submit__6Kq7Y\",\"login__link\":\"Registration_login__link__hJlYA\",\"error_message\":\"Registration_error_message__PtB1R\",\"logoSvg\":\"Registration_logoSvg__rOTK8\",\"wrapper\":\"Registration_wrapper__SjUXv\"};","import React from 'react';\n\nexport const IconUser = ({ className }) => {\n  return (\n    <svg id=\"icon_user\" viewBox=\"0 0 32 32\" className={className}>\n      <path\n        fill=\"#fff\"\n        opacity=\"0.4\"\n        d=\"M0 3.556v24.889c0 1.956 1.582 3.556 3.556 3.556h24.889c1.956 0 3.556-1.6 3.556-3.556v-24.889c0-1.956-1.6-3.556-3.556-3.556h-24.889c-1.973 0-3.556 1.6-3.556 3.556zM21.333 10.667c0 2.951-2.382 5.333-5.333 5.333s-5.333-2.382-5.333-5.333c0-2.951 2.382-5.333 5.333-5.333s5.333 2.382 5.333 5.333zM5.333 24.889c0-3.556 7.111-5.511 10.667-5.511s10.667 1.956 10.667 5.511v1.778h-21.333v-1.778z\"\n      ></path>\n    </svg>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"indicator\":\"PasswordStrengthIndicator_indicator__xj-pg\",\"empty\":\"PasswordStrengthIndicator_empty__OAPnY\",\"weak\":\"PasswordStrengthIndicator_weak__GHfk3\",\"medium\":\"PasswordStrengthIndicator_medium__BKSko\",\"strong\":\"PasswordStrengthIndicator_strong__xD1JH\",\"super_strong\":\"PasswordStrengthIndicator_super_strong__CpIy9\"};","import React from 'react';\nimport css from './PasswordStrengthIndicator.module.css';\n\nconst PasswordStrengthIndicator = ({ password }) => {\n  const calculateStrength = () => {\n    const passwordLength = password.length;\n    const hasUppercase = /[A-Z]/.test(password);\n    const hasLowercase = /[a-z]/.test(password);\n    const hasSpecialChar = /[!@#$%^&*(),.?\":{}|<>]/.test(password);\n\n    if (passwordLength >= 8 && hasUppercase && hasLowercase && hasSpecialChar) {\n      return css.super_strong;\n    } else if (passwordLength >= 8 && hasUppercase && hasLowercase) {\n      return css.strong;\n    } else if (passwordLength >= 6 && (hasUppercase || hasLowercase)) {\n      return css.medium;\n    } else if (passwordLength > 0) {\n      return css.weak;\n    } else {\n      return css.empty;\n    }\n  };\n\n  const strengthClass = calculateStrength();\n\n  return (\n    <div className={css.indicator}>\n      <div className={strengthClass}></div>\n    </div>\n  );\n};\n\nexport default PasswordStrengthIndicator;\n","import css from './Registration.module.css';\nimport { useDispatch } from 'react-redux';\nimport * as Yup from 'yup';\nimport { useFormik } from 'formik';\nimport { Link, NavLink } from 'react-router-dom';\nimport { registerUser } from 'redux/auth/operations';\nimport { LogoSVG } from 'components/Icons/LogoSVG';\nimport { IconUser } from 'components/Icons/IconUser';\nimport { IconLock } from 'components/Icons/IconLock';\nimport { IconEmail } from 'components/Icons/IconEmail';\nimport PasswordStrengthIndicator from 'components/PasswordStrengthIndicator/PasswordStrengthIndicator';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst Registration = () => {\n  const validationSchema = Yup.object({\n    username: Yup.string().required('Please enter your name'),\n    email: Yup.string()\n      .email('Invalid email address')\n      .required('Please enter your email'),\n    password: Yup.string()\n      .required('Please enter your password')\n      .min(6, 'Password must be at least 6 characters')\n      .max(12, 'Password should be no longer than 12 characters'),\n    confirmPassword: Yup.string()\n      .oneOf([Yup.ref('password'), null], 'Passwords must match')\n      .required('Please confirm your password'),\n  });\n  const dispatch = useDispatch();\n\n  const onSubmit = values => {\n    const { confirmPassword, ...payload } = values;\n    dispatch(registerUser(payload));\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      username: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n    },\n    validationSchema,\n    onSubmit,\n  });\n\n  return (\n    <section className={css.wrapper}>\n      <ToastContainer />\n      <div className={css.container}>\n        <div className={css.screen}>\n          <div className={css.screen__content}>\n            <NavLink to=\"/\" className={css.logo}>\n              <LogoSVG className={css.logoSvg} />\n            </NavLink>\n            <h1 className={css.title}>Money Guard</h1>\n            <form className={css.login} onSubmit={formik.handleSubmit}>\n              <div className={css.login__field}>\n                <IconEmail className={css.icon_email} />\n                <input\n                  type=\"email\"\n                  name=\"email\"\n                  placeholder=\"E-mail\"\n                  autoComplete=\"username\"\n                  className={css.login__input}\n                  onChange={formik.handleChange}\n                  value={formik.values.email}\n                />\n              </div>\n              {formik.touched.email && formik.errors.email ? (\n                <div className={css.error_message}>{formik.errors.email}</div>\n              ) : null}\n              <div className={css.login__field}>\n                <span className={css.user_icon__field}>\n                  <IconLock className={css.icon_lock} />\n                </span>\n                <input\n                  type=\"password\"\n                  name=\"password\"\n                  placeholder=\"Password\"\n                  autoComplete=\"new-password\"\n                  className={css.login__input}\n                  onChange={formik.handleChange}\n                  value={formik.values.password}\n                />\n              </div>\n              {formik.touched.password && formik.errors.password ? (\n                <div className={css.error_message}>\n                  {formik.errors.password}\n                </div>\n              ) : null}\n              <div className={css.login__field}>\n                <span className={css.user_icon__field}>\n                  <IconLock className={css.icon_lock} />\n                </span>\n                <input\n                  type=\"password\"\n                  name=\"confirmPassword\"\n                  placeholder=\"Confirm password\"\n                  autoComplete=\"new-password\"\n                  className={css.login__input}\n                  onChange={formik.handleChange}\n                  value={formik.values.confirmPassword}\n                />\n              </div>\n              <div className={css.password_srtength}>\n                <PasswordStrengthIndicator password={formik.values.password} />\n              </div>\n              <div className={css.strong_passworg}></div>\n              {formik.touched.confirmPassword &&\n              formik.errors.confirmPassword ? (\n                <div className={css.error_message}>\n                  {formik.errors.confirmPassword}\n                </div>\n              ) : null}\n              <div>\n                <div className={css.login__field}>\n                  <span className={css.user_icon__field}>\n                    <IconUser className={css.icon_user} />\n                  </span>\n                  <input\n                    type=\"text\"\n                    name=\"username\"\n                    placeholder=\"First name\"\n                    autoComplete=\"username\"\n                    className={css.login__input}\n                    onChange={formik.handleChange}\n                    onBlur={formik.handleBlur}\n                    value={formik.values.username}\n                  />\n                </div>\n                {formik.touched.username && formik.errors.username ? (\n                  <div className={css.error_wrapper}>\n                    <div className={css.error_message}>\n                      {formik.errors.username}\n                    </div>\n                  </div>\n                ) : null}\n              </div>\n              <button type=\"submit\" className={css.login__submit}>\n                <span className={css.button__text}>Register</span>\n              </button>\n              <Link to=\"/login\">\n                <div className={css.login__link}>Log in</div>\n              </Link>\n            </form>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Registration;\n"],"names":["IconEmail","className","id","viewBox","fill","opacity","d","IconLock","IconUser","password","strengthClass","passwordLength","length","hasUppercase","test","hasLowercase","hasSpecialChar","css","calculateStrength","validationSchema","Yup","username","required","email","min","max","confirmPassword","oneOf","dispatch","useDispatch","formik","useFormik","initialValues","onSubmit","values","payload","registerUser","to","LogoSVG","handleSubmit","type","name","placeholder","autoComplete","onChange","handleChange","value","touched","errors","onBlur","handleBlur"],"sourceRoot":""}